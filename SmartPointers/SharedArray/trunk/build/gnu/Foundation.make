# C++ Console Executable Makefile autogenerated by premake
# Don't edit this file! Instead edit `premake.lua` then rerun `make`

ifndef CONFIG
  CONFIG=debug_shared
endif

# if multiple archs are defined turn off automated dependency generation
DEPFLAGS := $(if $(word 2, $(TARGET_ARCH)), , -MMD)

ifeq ($(CONFIG),debug_shared)
  BINDIR := ../../bin
  LIBDIR := ../../lib
  OBJDIR := obj/poco/debug_shared
  OUTDIR := ../../bin
  CPPFLAGS := $(DEPFLAGS) -D "WIN32" -D "_WINDOWS" -D "WIN32" -D "_WINDOWS" -D "_DEBUG" -D "_USRDLL" -D "Foundation_EXPORTS" -D "PCRE_STATIC" -I "../../Foundation/include"
  CFLAGS += $(CPPFLAGS) $(TARGET_ARCH) -g
  CXXFLAGS := $(CFLAGS)
  LDFLAGS += -L$(BINDIR) -L$(LIBDIR) -shared -Wl,--out-implib="../../lib/libPocoFoundationd.a"
  LDDEPS :=
  RESFLAGS := -D "WIN32" -D "_WINDOWS" -D "WIN32" -D "_WINDOWS" -D "_DEBUG" -D "_USRDLL" -D "Foundation_EXPORTS" -D "PCRE_STATIC" -I "../../Foundation/include"
  TARGET := PocoFoundationd.dll
  BLDCMD = $(CXX) -o $(OUTDIR)/$(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(TARGET_ARCH)
endif

ifeq ($(CONFIG),release_shared)
  BINDIR := ../../bin
  LIBDIR := ../../lib
  OBJDIR := obj/poco/release_shared
  OUTDIR := ../../bin
  CPPFLAGS := $(DEPFLAGS) -D "WIN32" -D "_WINDOWS" -D "WIN32" -D "_WINDOWS" -D "_USRDLL" -D "Foundation_EXPORTS" -D "PCRE_STATIC" -I "../../Foundation/include"
  CFLAGS += $(CPPFLAGS) $(TARGET_ARCH) -O3 -fomit-frame-pointer
  CXXFLAGS := $(CFLAGS)
  LDFLAGS += -L$(BINDIR) -L$(LIBDIR) -shared -Wl,--out-implib="../../lib/libPocoFoundation.a" -s
  LDDEPS :=
  RESFLAGS := -D "WIN32" -D "_WINDOWS" -D "WIN32" -D "_WINDOWS" -D "_USRDLL" -D "Foundation_EXPORTS" -D "PCRE_STATIC" -I "../../Foundation/include"
  TARGET := PocoFoundation.dll
  BLDCMD = $(CXX) -o $(OUTDIR)/$(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(TARGET_ARCH)
endif

ifeq ($(CONFIG),debug_static)
  BINDIR := ../../bin
  LIBDIR := ../../lib
  OBJDIR := obj/poco/debug_static
  OUTDIR := ../../lib
  CPPFLAGS := $(DEPFLAGS) -D "WIN32" -D "_WINDOWS" -D "WIN32" -D "_WINDOWS" -D "_DEBUG" -D "Foundation_EXPORTS" -D "POCO_STATIC" -D "PCRE_STATIC" -I "../../Foundation/include"
  CFLAGS += $(CPPFLAGS) $(TARGET_ARCH) -g
  CXXFLAGS := $(CFLAGS)
  LDFLAGS += -L$(BINDIR) -L$(LIBDIR)
  LDDEPS :=
  RESFLAGS := -D "WIN32" -D "_WINDOWS" -D "WIN32" -D "_WINDOWS" -D "_DEBUG" -D "Foundation_EXPORTS" -D "POCO_STATIC" -D "PCRE_STATIC" -I "../../Foundation/include"
  TARGET := libPocoFoundationmtd.a
  BLDCMD = ar -rcs $(OUTDIR)/$(TARGET) $(OBJECTS) $(TARGET_ARCH)
endif

ifeq ($(CONFIG),release_static)
  BINDIR := ../../bin
  LIBDIR := ../../lib
  OBJDIR := obj/poco/release_static
  OUTDIR := ../../lib
  CPPFLAGS := $(DEPFLAGS) -D "WIN32" -D "_WINDOWS" -D "WIN32" -D "_WINDOWS" -D "Foundation_EXPORTS" -D "POCO_STATIC" -D "PCRE_STATIC" -I "../../Foundation/include"
  CFLAGS += $(CPPFLAGS) $(TARGET_ARCH) -O3 -fomit-frame-pointer
  CXXFLAGS := $(CFLAGS)
  LDFLAGS += -L$(BINDIR) -L$(LIBDIR) -s
  LDDEPS :=
  RESFLAGS := -D "WIN32" -D "_WINDOWS" -D "WIN32" -D "_WINDOWS" -D "Foundation_EXPORTS" -D "POCO_STATIC" -D "PCRE_STATIC" -I "../../Foundation/include"
  TARGET := libPocoFoundationmt.a
  BLDCMD = ar -rcs $(OUTDIR)/$(TARGET) $(OBJECTS) $(TARGET_ARCH)
endif

OBJECTS := \
	$(OBJDIR)/Bugcheck.o \
	$(OBJDIR)/Debugger.o \
	$(OBJDIR)/Exception.o \
	$(OBJDIR)/Mutex.o \
	$(OBJDIR)/String.o \
	$(OBJDIR)/Timestamp.o \

RESOURCES := \

MKDIR_TYPE := msdos
CMD := $(subst \,\\,$(ComSpec)$(COMSPEC))
ifeq (,$(CMD))
  MKDIR_TYPE := posix
endif
ifeq (/bin/sh.exe,$(SHELL))
  MKDIR_TYPE := posix
endif
ifeq ($(MKDIR_TYPE),posix)
  CMD_MKBINDIR := mkdir -p $(BINDIR)
  CMD_MKLIBDIR := mkdir -p $(LIBDIR)
  CMD_MKOUTDIR := mkdir -p $(OUTDIR)
  CMD_MKOBJDIR := mkdir -p $(OBJDIR)
else
  CMD_MKBINDIR := $(CMD) /c if not exist $(subst /,\\,$(BINDIR)) mkdir $(subst /,\\,$(BINDIR))
  CMD_MKLIBDIR := $(CMD) /c if not exist $(subst /,\\,$(LIBDIR)) mkdir $(subst /,\\,$(LIBDIR))
  CMD_MKOUTDIR := $(CMD) /c if not exist $(subst /,\\,$(OUTDIR)) mkdir $(subst /,\\,$(OUTDIR))
  CMD_MKOBJDIR := $(CMD) /c if not exist $(subst /,\\,$(OBJDIR)) mkdir $(subst /,\\,$(OBJDIR))
endif

.PHONY: clean

$(OUTDIR)/$(TARGET): $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking Foundation
	-@$(CMD_MKBINDIR)
	-@$(CMD_MKLIBDIR)
	-@$(CMD_MKOUTDIR)
	@$(BLDCMD)

clean:
	@echo Cleaning Foundation
ifeq ($(MKDIR_TYPE),posix)
	-@rm -f $(OUTDIR)/$(TARGET)
	-@rm -rf $(OBJDIR)
else
	-@if exist $(subst /,\,$(OUTDIR)/$(TARGET)) del /q $(subst /,\,$(OUTDIR)/$(TARGET))
	-@if exist $(subst /,\,$(OBJDIR)) del /q $(subst /,\,$(OBJDIR))
	-@if exist $(subst /,\,$(OBJDIR)) rmdir /s /q $(subst /,\,$(OBJDIR))
endif

$(OBJDIR)/Bugcheck.o: ../../Foundation/src/Bugcheck.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/Debugger.o: ../../Foundation/src/Debugger.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/Exception.o: ../../Foundation/src/Exception.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/Mutex.o: ../../Foundation/src/Mutex.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/String.o: ../../Foundation/src/String.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/Timestamp.o: ../../Foundation/src/Timestamp.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<

-include $(OBJECTS:%.o=%.d)

