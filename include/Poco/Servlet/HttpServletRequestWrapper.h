//
// HttpServletRequestWrapper.h
//
//
// Library: Servlet
// Package: Http
// Module:  HttpServletRequestWrapper
//
// Definition of the HttpServletRequestWrapper class.
//
// Copyright (c) 2006, Aleksandar Fabijanic and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//
//
// The code in this file is derived from Apache Tomcat project
// Copyright (c) 2004 The Apache Software Foundation.
// http://www.apache.org/licenses/LICENSE-2.0
// 

#ifndef Servlet_Http_HttpServletRequestWrapper_INCLUDED
#define Servlet_Http_HttpServletRequestWrapper_INCLUDED


#include "Poco/Servlet/ServletRequestWrapper.h"
#include "Poco/Servlet/HttpServletRequest.h"


#if defined(_MSC_VER)
//disable MSVC "inherits ... via dominance" warning
# pragma warning(disable:4250)
#endif


namespace Poco {
namespace Servlet {


class Servlet_API HttpServletRequestWrapper : 
	public ServletRequestWrapper, public HttpServletRequest 
{
public:
	
	HttpServletRequestWrapper(HttpServletRequest& request);
		/// Constructs a request object wrapping the given request.

	std::string getAuthType();
		/// The default behavior of this method is to return getAuthType()
		/// on the wrapped request object.
  
	const std::vector<Cookie>& getCookies();
		/// The default behavior of this method is to return getCookies()
		/// on the wrapped request object.

	long getDateHeader(const std::string& name);
		/// The default behavior of this method is to return getDateHeader(String name)
		/// on the wrapped request object.
      	
	std::string getHeader(const std::string& name);
		/// The default behavior of this method is to return getHeader(String name)
		/// on the wrapped request object.
  
	std::vector<std::string> getHeaders(const std::string& name);
		/// The default behavior of this method is to return getHeaders(String name)
		/// on the wrapped request object.

	std::vector<std::string> getHeaderNames();
		/// The default behavior of this method is to return getHeaderNames()
		/// on the wrapped request object.
  
	int getIntHeader(const std::string& name);
		/// The default behavior of this method is to return getIntHeader(String name)
		/// on the wrapped request object.
  
	std::string getMethod();
		/// The default behavior of this method is to return getMethod()
		/// on the wrapped request object.
  
	std::string getPathInfo();
		/// The default behavior of this method is to return getPathInfo()
		/// on the wrapped request object.

	std::string getPathTranslated();
		/// The default behavior of this method is to return getPathTranslated()
		/// on the wrapped request object.

	std::string getContextPath();
		/// The default behavior of this method is to return getContextPath()
		/// on the wrapped request object.
  
	std::string getQueryString();
		/// The default behavior of this method is to return getQueryString()
		/// on the wrapped request object.
  
	std::string getRemoteUser();
		/// The default behavior of this method is to return getRemoteUser()
		/// on the wrapped request object.
  
	bool isUserInRole(const std::string& role);
		/// The default behavior of this method is to return isUserInRole(String role)
		/// on the wrapped request object.
  

	//TODO java.security.Principal getUserPrincipal();
		/// The default behavior of this method is to return getUserPrincipal()
		/// on the wrapped request object.
   
	std::string getRequestedSessionId();
		/// The default behavior of this method is to return getRequestedSessionId()
		/// on the wrapped request object.
  
	std::string getRequestURI();
		/// The default behavior of this method is to return getRequestURI()
		/// on the wrapped request object.

	std::string getRequestURL();
		/// The default behavior of this method is to return getRequestURL()
		/// on the wrapped request object.
	
	std::string getServletPath();
		/// The default behavior of this method is to return getServletPath()
		/// on the wrapped request object.
  
  
	const HttpSession* getSession(bool create);
		/// The default behavior of this method is to return getSession(bool create)
		/// on the wrapped request object.
  
	const HttpSession* getSession();
		/// The default behavior of this method is to return getSession()
		/// on the wrapped request object.
  
	bool isRequestedSessionIdValid();
		/// The default behavior of this method is to return isRequestedSessionIdValid()
		/// on the wrapped request object.
   
	bool isRequestedSessionIdFromCookie();
		/// The default behavior of this method is to return isRequestedSessionIdFromCookie()
		/// on the wrapped request object.
  
	bool isRequestedSessionIdFromURL();
		/// The default behavior of this method is to return isRequestedSessionIdFromURL()
		/// on the wrapped request object.
  
	bool isRequestedSessionIdFromUrl();
		/// The default behavior of this method is to return isRequestedSessionIdFromUrl()
		/// on the wrapped request object.

private :
	HttpServletRequestWrapper(const HttpServletRequestWrapper&);

	HttpServletRequest& _request;
};


} } // namespace Poco::Servlet


#endif //Servlet_Http_HttpServletRequestWrapper_INCLUDED
