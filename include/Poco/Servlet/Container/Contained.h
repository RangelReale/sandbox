//
// Contained.h
//
//
// Library: Container
// Package: ContainerCore
// Module:  Contained
//
// Definition of the Contained class.
//
// Copyright (c) 2006, Aleksandar Fabijanic and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//

#ifndef Container_Contained_INCLUDED
#define Container_Contained_INCLUDED


#include "Poco/Servlet/Container/ContainerBase.h"
#include "Poco/ClassLoader.h"
#include "Poco/AutoPtr.h"
#include "Poco/Logger.h"
#include "Poco/Mutex.h"
#include "Poco/SplitterChannel.h"
#include "Poco/Path.h"
#include "Poco/String.h"
#include "Poco/Exception.h"
#include "Poco/Util/LayeredConfiguration.h"
#include "Poco/Util/LoggingConfigurator.h"
#include "Poco/Util/PropertyFileConfiguration.h"
#include <fstream>
#include <sstream>


namespace Poco {
namespace Servlet {
namespace Container {


class Container_API Contained
	/// Abstract class defining common functionality for contained
	/// entities. Servers and servlets can be contained. Servlets
	/// inherit from HttpServlet, while servers inherit from HttpServer.
	/// Servlet implementation is dependent on servlet API. Server
	/// implementation depends on HttpServer abstract class.
	///
	/// Servers can be either built-in, fully functional standalone web servers
	/// or web server peer-process type (such as Apache/FastCGI or Xitami/LRWP). 
{
 public:
	 
	Contained(const std::string& name);

  virtual ~Contained();

	Poco::Logger* getLogger();

	virtual void setInitParameter(const std::string& name, const std::string& value) = 0;
	 /// Sets initialization parameter. Must be defined by the inheriting class.

  virtual std::string getInitParameter(const std::string& name) const = 0;
	 /// Retrieves initialization parameter. Returns empty string if the parameter is not found.
	 /// Must be defined by the inheriting class.

  virtual std::string getInitParameter(const std::string& name, const std::string& defValue) const = 0;
	 /// Retrieves initialization parameter. Returns specified default value if the parameter is not found.
	 /// Must be defined by the inheriting class.

	const std::string& name() const;

 protected:

	virtual void initLogging();

	Poco::Path getSharedLibPath(const std::string& fileName);
	void loadConfiguration();

	std::string _name;
	 /// Web server/application name. Equals the server/application
	 /// directory name (one level under container root).

	Poco::Path _rootPath;
	 /// Web application root directory.

	//Poco::AutoPtr<Util::XMLConfiguration> _pConf;
	Poco::AutoPtr<Poco::Util::LayeredConfiguration> _pConf;
	 /// Application configuration. This is the web.xml
	 /// file loaded into XMLConfiguration.

	Poco::Logger* _pLogger;
	 /// Root logger for the contained entity.


};


} } } // namespace Poco::Servlet::Container


#endif //Container_Contained_INCLUDED
