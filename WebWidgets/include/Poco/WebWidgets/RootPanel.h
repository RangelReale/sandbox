//
// RootPanel.h
//
// $Id: //poco/Main/WebWidgets/include/Poco/WebWidgets/RootPanel.h#2 $
//
// Library: WebWidgets
// Package: WebGUI
// Module:  RootPanel
//
// Definition of the RootPanel class.
//
// Copyright (c) 2007, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#ifndef WebWidgets_RootPanel_INCLUDED
#define WebWidgets_RootPanel_INCLUDED


#include "Poco/WebWidgets/WebWidgets.h"
#include "Poco/WebWidgets/IndexedPanel.h"
#include "Poco/WebWidgets/HTML.h"


namespace Poco {
namespace WebWidgets {


class WebWidgets_API RootPanel: public IndexedPanel
	/// RootPanel defines the main window of the application.
	/// The html tag is optional and contains header specific info
	///     <rootPanel name="sometitle">
	///         <header>
	///             <html>
	///                  <![CDATA[
	///                  <i>some text</i>
	///                  ]]>
	///             </html>
	///         </header>
	///         <children>
	///              <!-- set of widgets -->
	///         </children>
{
public:
	static const std::string FACTORY_ID;
	static const std::string XML_NAME;
	static const std::string XML_HEADER;
	static const std::string XML_CHILDREN;

	RootPanel(const std::string& name, const std::vector<Poco::AutoPtr<Widget> >& children = std::vector<Poco::AutoPtr<Widget> >());
		/// Creates the RootPanel.

	RootPanel(const Poco::XML::Element* pElem);
		/// Creates the RootPanel from the XML.

	virtual ~RootPanel();
		/// Destroys the RootPanel.

	void setHeader(Poco::AutoPtr<HTML> html);

	void setHeader(const std::string& htmlData);

	Poco::AutoPtr<HTML> getHeader() const;
		/// Returns the header, can be null.

	void accept(Visitor& v);

	const std::string& getName() const;

	void setName(const std::string& name);

	Poco::AutoPtr<Widget> find(const std::string& id) const;

	Poco::AutoPtr<Widget> clone() const;

private:
	std::string         _name;
	Poco::AutoPtr<HTML> _ptrHeader;
};


inline const std::string& RootPanel::getName() const
{
	return _name;
}


inline void RootPanel::setName(const std::string& name)
{
	_name = name;
}


inline void RootPanel::setHeader(Poco::AutoPtr<HTML> html)
{
	_ptrHeader = html;
}


inline void RootPanel::setHeader(const std::string& htmlData)
{
	_ptrHeader = new HTML(htmlData);
}


inline Poco::AutoPtr<HTML> RootPanel::getHeader() const
{
	return _ptrHeader;
}


} } // namespace Poco::WebWidgets


#endif // WebWidgets_RootPanel_INCLUDED
