//
// Parser.h
//
// $Id: //poco/Main/WebWidgets/include/Poco/WebWidgets/Parser.h#2 $
//
// Library: WebWidgets
// Package: WebParser
// Module:  Parser
//
// Definition of the Parser class.
//
// Copyright (c) 2007, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#ifndef WebWidgets_Parser_INCLUDED
#define WebWidgets_Parser_INCLUDED


#include "Poco/WebWidgets/WebWidgets.h"
#include "Poco/WebWidgets/Widget.h"
#include "Poco/WebWidgets/ParserFactory.h"
#include "Poco/AutoPtr.h"
#include "Poco/Exception.h"
#include "Poco/SharedPtr.h"
#include "Poco/SingletonHolder.h"
#include <map>


namespace Poco {
namespace XML {
	class Element;
}
}


namespace Poco {
namespace WebWidgets {


class WebWidgets_API Parser
	/// The Parser parses an XML description of the GUI and invokes the visitor functions
{
public:
	typedef Poco::SharedPtr<ParserFactory> ParserFactoryPtr;

	static Parser& instance();
		/// Returns the instance of the Parser singleton

	void registerFactory(const std::string& id, ParserFactoryPtr pFac);
		/// registers a factory for the given id. will fail if a factory already exists for that id,
		/// takes always ownership of the pointer

	void unregisterFactory(const std::string& id);
		/// unregisters a factory for the given id.

	Poco::AutoPtr<Widget> load(const Poco::XML::Element* pElem) const;
		/// Loads a Widget from the given XML element

	template <typename T>
	Poco::AutoPtr<T> load(const Poco::XML::Element* pElem) const
		/// Loads a Widget from a given type from the given XML element.
		/// Will fail if the type doesn't match
	{
		Poco::AutoPtr<T> ptr = load(pElem).cast<T>();
		if (!ptr)
			throw Poco::BadCastException();
		return ptr;
	}

private:
	Parser();
		/// Creates the Parser.

	virtual ~Parser();
		/// Destroys the Parser.

private:
	typedef std::map<std::string, ParserFactoryPtr> Factories;
	Factories _factories;
	friend class Poco::SingletonHolder<Parser>;
};


} } // namespace Poco::WebWidgets


#endif // WebWidgets_Parser_INCLUDED
