//
// KeyEventArgs.h
//
// $Id: //poco/Main/WebWidgets/include/Poco/WebWidgets/KeyEventArgs.h#2 $
//
// Library: WebWidgets
// Package: WebEvents
// Module:  KeyEventArgs
//
// Definition of the KeyEventArgs class.
//
// Copyright (c) 2007, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#ifndef WebWidgets_KeyEventArgs_INCLUDED
#define WebWidgets_KeyEventArgs_INCLUDED


#include "Poco/WebWidgets/WebWidgets.h"


namespace Poco {
namespace WebWidgets {


	class Widget;


class WebWidgets_API KeyEventArgs
	/// KeyEventArgs stores data related to a keyboard event
{
public:
	KeyEventArgs(Widget* pTarget, int keyCode, bool alt, bool shift, bool ctrl);
		/// Creates the KeyEventArgs.

	virtual ~KeyEventArgs();
		/// Destroys the KeyEventArgs.

	Widget* target() const;
		/// Returns the target

	int keyPressed() const;
		/// Returns the unicode value of the key pressed

	bool altKeyPressed() const;
		/// Returns true if the ALT key was pressed

	bool shiftKeyPressed() const;
		/// Returns true if the SHIFT key was pressed

	bool ctrlKeyPressed() const;
		/// Returns true if the CTRL key was pressed

private:
	Widget* _pTarget;
	int  _keyCode;
	bool _alt;
	bool _shift;
	bool _ctrl;
};


inline Widget* KeyEventArgs::target() const
{
	return _pTarget;
}


inline int KeyEventArgs::keyPressed() const
{
	return _keyCode;
}


inline bool KeyEventArgs::altKeyPressed() const
{
	return _alt;
}


inline bool KeyEventArgs::shiftKeyPressed() const
{
	return _shift;
}


inline bool KeyEventArgs::ctrlKeyPressed() const
{
	return _ctrl;
}


} } // namespace Poco::WebWidgets


#endif // WebWidgets_KeyEventArgs_INCLUDED
