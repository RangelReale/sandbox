//
// WidgetHandlerFactory.h
//
// $Id: //poco/Main/WebWidgets/include/Poco/WebWidgets/WidgetHandlerFactory.h#4 $
//
// Library: WebWidgets
// Package: HTTPHandler
// Module:  WidgetHandlerFactory
//
// Definition of the WidgetHandlerFactory class.
//
// Copyright (c) 2007, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#ifndef WebWidgets_WidgetHandlerFactory_INCLUDED
#define WebWidgets_WidgetHandlerFactory_INCLUDED


#include "Poco/WebWidgets/WebWidgets.h"
#include "Poco/WebWidgets/Widget.h"
#include "Poco/WebWidgets/CheckBox.h"
#include "Poco/WebWidgets/Form.h"
#include "Poco/WebWidgets/InputField.h"
#include "Poco/Net/HTTPRequestHandlerFactory.h"
#include "Poco/Net/HTTPServerRequest.h"
#include "Poco/URI.h"
#include "Poco/AutoPtr.h"
#include <map>
#include <set>


namespace Poco {
namespace WebWidgets {


class WebWidgets_API WidgetHandlerFactory: public Poco::Net::HTTPRequestHandlerFactory
	/// A WidgetHandlerFactory is responsible for dispatching GUI callbacks
{
public:
	WidgetHandlerFactory();
		/// Creates the WidgetHandlerFactory.

	virtual ~WidgetHandlerFactory();
		/// Destroys the WidgetHandlerFactory.

	void addWidget(const Poco::URI& path, Poco::AutoPtr<Widget> ptr);

	void removeWidget(const Poco::URI& path);

	std::set<std::string> getHandledURIs() const;

	Poco::Net::HTTPRequestHandler* createRequestHandler(const Poco::Net::HTTPServerRequest& request);

private:
	void registerForm(const Poco::URI& owner, Poco::AutoPtr<Form> ptrForm);
		/// Registers a form so we handle data transferred through a form

	void registerInputField(const std::string& uri, Poco::AutoPtr<InputField> ptrInput);
		/// Registers an input field belonging to the form identified by the uri

	void registerCheckBox(const std::string& uri, Poco::AutoPtr<CheckBox> ptrInput);
		/// Registers a checkbox belonging to the form identified by the uri

	void onContainsForm(std::pair<Poco::URI, Form*>& aPair);

	void onHasInputField(std::pair<Form*, InputField*>& aPair);

	void onHasCheckBox(std::pair<Form*, CheckBox*>& aPair);

	void onWidget(std::pair<Poco::URI, Widget*>& aPair);

private:
	typedef std::map<std::string, Poco::AutoPtr<Widget> > Widgets;
		/// Maps a server uri to the Widget at that location
	typedef std::multimap<std::string, Poco::AutoPtr<Form> > Forms;
		/// Maps owner uris to forms
	typedef std::map<std::string, Poco::AutoPtr<Form> > Actions;
		/// Maps action uris to their forms
	
	typedef std::map<std::string, Poco::AutoPtr<InputField> > NamedInputFields;
	typedef std::map<std::string, NamedInputFields> ActionInputs;
		///Maps action uris to a named map of inputfields

	typedef std::multimap<std::string, Poco::AutoPtr<CheckBox> > NamedCheckBoxes;
	typedef std::map<std::string, NamedCheckBoxes> ActionCheckBoxes;
	///Maps action uris to a named map of checkboxes

	typedef std::map<std::string, Widget*> IDToWidget;
	typedef std::map<std::string, IDToWidget> OwnerToWidgets;
		/// Maps for each url, the map of Widgets

	Widgets _widgets;
	Forms   _forms;
	Actions _actions;
	ActionInputs _inputs;
	ActionCheckBoxes _checkBoxes;
	OwnerToWidgets _allWidgets;
		/// Contains all widgets not only rootelements!
};


} } // namespace Poco::WebWidgets


#endif // WebWidgets_WidgetHandlerFactory_INCLUDED
