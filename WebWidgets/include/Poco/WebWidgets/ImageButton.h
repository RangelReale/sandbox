//
// ImageButton.h
//
// $Id: //poco/Main/WebWidgets/include/Poco/WebWidgets/ImageButton.h#3 $
//
// Library: WebWidgets
// Package: WebGUI
// Module:  ImageButton
//
// Definition of the ImageButton class.
//
// Copyright (c) 2007, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#ifndef WebWidgets_ImageButton_INCLUDED
#define WebWidgets_ImageButton_INCLUDED


#include "Poco/WebWidgets/WebWidgets.h"
#include "Poco/WebWidgets/AbstractButton.h"
#include "Poco/URI.h"


namespace Poco {
namespace WebWidgets {


class WebWidgets_API ImageButton: public AbstractButton
	/// A ImageButton is basically a submit button with an image
	///     <imageButton id="someid" text="ClickMe" img="source.gif" width="30" height="30"/>
{
public:
	static const std::string FACTORY_ID;
	static const std::string XML_IMG;
	static const std::string XML_WIDTH;
	static const std::string XML_HEIGHT;

	ImageButton(const Poco::URI& img, const std::string& alternativeText, Poco::UInt32 width = 0, Poco::UInt32 height = 0);
		/// Creates the ImageButton.

	ImageButton(const Poco::XML::Element* pElem);
		/// Creates the ImageButton from the XML element.

	virtual ~ImageButton();
		/// Destroys the ImageButton.

	void setImage(const Poco::URI& img);

	const Poco::URI& getImage() const;

	void accept(Visitor& v);

	Poco::AutoPtr<Widget> clone() const;

	Poco::UInt32 getWidth() const;

	Poco::UInt32 getHeight() const;

	void setWidth(Poco::UInt32 width);
		/// Set the width of the image, 0 means original size

	void setHeight(Poco::UInt32 height);
		/// Set the height of the image, 0 means original size

private:
	Poco::URI _img;
	Poco::UInt32 _width;
	Poco::UInt32 _height;
};


inline void ImageButton::setImage(const Poco::URI& img)
{
	_img = img;
}


inline const Poco::URI& ImageButton::getImage() const
{
	return _img;
}


inline Poco::UInt32 ImageButton::getWidth() const
{
	return _width;
}


inline Poco::UInt32 ImageButton::getHeight() const
{
	return _height;
}


inline void ImageButton::setWidth(Poco::UInt32 width)
{
	_width = width;
}


inline void ImageButton::setHeight(Poco::UInt32 height)
{
	_height = height;
}


} } // namespace Poco::WebWidgets


#endif // WebWidgets_ImageButton_INCLUDED
