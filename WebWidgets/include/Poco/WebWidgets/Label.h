//
// Label.h
//
// $Id: //poco/Main/WebWidgets/include/Poco/WebWidgets/Label.h#2 $
//
// Library: WebWidgets
// Package: WebGUI
// Module:  Label
//
// Definition of the Label class.
//
// Copyright (c) 2007, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#ifndef WebWidgets_Label_INCLUDED
#define WebWidgets_Label_INCLUDED


#include "Poco/WebWidgets/WebWidgets.h"
#include "Poco/WebWidgets/Widget.h"


namespace Poco {
namespace WebWidgets {


class WebWidgets_API Label: public Widget
	/// A Label holds an unformatted string
	///     <label>some text</label>
	
{
public:
	static const std::string FACTORY_ID;

	Label();
		/// Creates a Label without text

	Label(const std::string& txt);
		/// Creates a Label with the given text

	Label(const Poco::XML::Element* pElem);
		/// Creates a Label from the given element

	virtual ~Label();
		/// Destroys the Label.

	void accept(Visitor& v);

	const std::string& getText() const;

	void setText(const std::string& text);

	Poco::AutoPtr<Widget> find(const std::string& id) const;

	Poco::AutoPtr<Widget> clone() const;

private:
	std::string _text;
};


inline Poco::AutoPtr<Widget> Label::find(const std::string& id) const
{
	return Poco::AutoPtr<Widget>();
}


inline const std::string& Label::getText() const
{
	return _text;
}


inline void Label::setText(const std::string& text)
{
	_text = text;
}


} } // namespace Poco::WebWidgets


#endif // WebWidgets_Label_INCLUDED
