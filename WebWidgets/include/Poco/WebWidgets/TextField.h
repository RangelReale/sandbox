//
// TextField.h
//
// $Id: //poco/Main/WebWidgets/include/Poco/WebWidgets/TextField.h#3 $
//
// Library: WebWidgets
// Package: WebGUI
// Module:  TextField
//
// Definition of the TextField class.
//
// Copyright (c) 2007, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#ifndef WebWidgets_TextField_INCLUDED
#define WebWidgets_TextField_INCLUDED


#include "Poco/WebWidgets/WebWidgets.h"
#include "Poco/WebWidgets/InputField.h"


namespace Poco {
namespace WebWidgets {


class WebWidgets_API TextField: public InputField
	/// A single line TextField. Size and name are mandatory
	///     <textField size="30" maxLength="30" name="unique">default value</textField>
{
public:
	static const std::string FACTORY_ID;
	static const std::string XML_SIZE;
	static const std::string XML_MAXLENGTH;

	TextField(const std::string& uniqueName, Poco::UInt32 size, Poco::UInt32 maxLength, const std::string& defTxt = std::string());
		/// Creates the TextField with the given size and an optional maxLength value (set to 0 to disable it).

	TextField(const Poco::XML::Element* pElem);
		/// Creates the TextField from the XML

	virtual ~TextField();
		/// Destroys the TextField.

	Poco::UInt32 getSize() const;

	Poco::UInt32 getMaxLength() const;

	void setSize(Poco::UInt32 sz);

	void setMaxLength(Poco::UInt32 len);

	void accept(Visitor& v);

	Poco::AutoPtr<Widget> clone() const;

private:
	Poco::UInt32 _size;
	Poco::UInt32 _maxLength;
};


inline Poco::UInt32 TextField::getSize() const
{
	return _size;
}


inline Poco::UInt32 TextField::getMaxLength() const
{
	return _maxLength;
}


inline void TextField::setSize(Poco::UInt32 sz)
{
	_size = sz;
}


inline void TextField::setMaxLength(Poco::UInt32 len)
{
	_maxLength = len;
}


} } // namespace Poco::WebWidgets


#endif // WebWidgets_TextField_INCLUDED
