//
// Visitor.h
//
// $Id: //poco/Main/WebWidgets/include/Poco/WebWidgets/Visitor.h#4 $
//
// Library: WebWidgets
// Package: WebVisitor
// Module:  Visitor
//
// Definition of the Visitor class.
//
// Copyright (c) 2007, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#ifndef WebWidgets_Visitor_INCLUDED
#define WebWidgets_Visitor_INCLUDED


#include "Poco/WebWidgets/WebWidgets.h"


namespace Poco {
namespace WebWidgets {


class Label;
class RootPanel;
class Image;
class FlowPanel;
class SimplePanel;
class HTML;
class Table;
class HyperLink;
class Button;
class ImageButton;
class TextArea;
class TextField;
class CheckBox;
class RadioButton;
class Form;
class IndexedPanel;
class StackPanel;
class ComboBox;
class ListView;
class HidablePanel;
class Widget;
class InputField;
class PwdField;


class WebWidgets_API Visitor
	/// A Visitor is used as an interface for code generation for a given set of different classes.
{
public:
	Visitor();
		/// Creates the Visitor.

	virtual ~Visitor();
		/// Destroys the Visitor.

	virtual void visit(Label& label) = 0;
		/// Generates code for a label

	virtual void visit(HTML& raw) = 0;
		/// Generates code for a raw HTML element

	virtual void visit(RootPanel& main) = 0;
		/// Generates code for the RootPanel class

	virtual void visit(Image& img) = 0;
		/// Generates code for an image

	virtual void visit(FlowPanel& flow) = 0;
		/// Generates code for a FlowPanel

	virtual void visit(Table& table) = 0;
		/// Generates code for a Table

	virtual void visit(HyperLink& link) = 0;
		/// Generates code for a HyperLink

	virtual void visit(Button& but) = 0;
		/// Generates code for a Button

	virtual void visit(ImageButton& but) = 0;
		/// Generates code for a ImageButton

	virtual void visit(TextArea& txt) = 0;
		/// Generates code for a TextArea

	virtual void visit(TextField& txt) = 0;
		/// Generates code for a TextField

	virtual void visit(CheckBox& but) = 0;
		/// Generates code for a CheckBox

	virtual void visit(RadioButton& but) = 0;
		/// Generates code for a RadioButton

	virtual void visit(Form& f) = 0;
		/// Generates code for a Form

	virtual void visit(IndexedPanel& p) = 0;
		/// Generates code for a IndexedPanel

	virtual void visit(StackPanel& p) = 0;
		/// Generates code for a StackPanel

	virtual void visit(ComboBox& p) = 0;
		/// Generates code for a ComboBox

	virtual void visit(ListView& l) = 0;
		/// Generates code for a ListView

	virtual void visit(HidablePanel& l) = 0;
		/// Generates code for a HidablePanel

	virtual void visit(PwdField& l) = 0;
		/// Generates code for a PwdField

	virtual void preVisit(Widget& widget) = 0;

	virtual void preVisit(SimplePanel& widget) = 0;

	virtual void preVisit(IndexedPanel& widget) = 0;

	virtual void preVisit(HidablePanel& widget) = 0;

	virtual void preVisit(InputField& widget) = 0;

protected:
	virtual void preVisit(RootPanel& main) = 0;
};


} } // namespace Poco::WebWidgets


#endif // WebWidgets_Visitor_INCLUDED
