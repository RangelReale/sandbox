//
// JSEventHandler.h
//
// $Id: //poco/Main/WebWidgets/include/Poco/WebWidgets/JSEventHandler.h#3 $
//
// Library: WebWidgets
// Package: WebEvents
// Module:  JSEventHandler
//
// Definition of the JSEventHandler class.
//
// Copyright (c) 2007, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#ifndef WebWidgets_JSEventHandler_INCLUDED
#define WebWidgets_JSEventHandler_INCLUDED


#include "Poco/WebWidgets/WebWidgets.h"
#include "Poco/WebWidgets/Widget.h"
#include "Poco/WebWidgets/JavaScriptEvent.h"
#include "Poco/Net/HTTPRequestHandler.h"
#include "Poco/Net/HTTPServerRequest.h"
#include "Poco/Net/HTTPServerResponse.h"
#include "Poco/Net/HTMLForm.h"


namespace Poco {
namespace WebWidgets {


class WebWidgets_API JSEventHandler: public Poco::Net::HTTPRequestHandler
	/// A JSEventHandler delegates JS callbacks to the correct widget
{
public:
	static const std::string FORM_ID;
	static const std::string FORM_TYPE;
	static const std::string FORM_BUTTONS;
	static const std::string FORM_POSX;
	static const std::string FORM_POSY;
	static const std::string FORM_WINPOSX;
	static const std::string FORM_WINPOSY;
	static const std::string FORM_KEY;
	static const std::string FORM_SHIFT;
	static const std::string FORM_CTRL;
	static const std::string FORM_ALT;
	static const std::string VAL_CLICK;
	static const std::string VAL_DBLCLICK;
	static const std::string VAL_MOUSEUP;
	static const std::string VAL_MOUSEDOWN;
	static const std::string VAL_MOUSEOUT;
	static const std::string VAL_MOUSEOVER;
	static const std::string VAL_MOUSEMOVE;
	static const std::string VAL_FOCUSENTER;
	static const std::string VAL_FOCUSLOST;
	static const std::string VAL_KEYUP;
	static const std::string VAL_KEYDOWN;
	static const std::string VAL_KEYPRESSED;
	static const std::string VAL_SELECT;
	static const std::string VAL_CHANGE;


	JSEventHandler(std::map<std::string, Widget*>& children);
		/// Creates the JSEventHandler.

	virtual ~JSEventHandler();
		/// Destroys the JSEventHandler.

	void handleRequest(Poco::Net::HTTPServerRequest& request, Poco::Net::HTTPServerResponse& response);

private:
	void handleClick(const Poco::Net::HTMLForm& form, Widget* pWidget);
	void handleDblClick(const Poco::Net::HTMLForm& form, Widget* pWidget);
	void handleMouseUp(const Poco::Net::HTMLForm& form, Widget* pWidget);
	void handleMouseDown(const Poco::Net::HTMLForm& form, Widget* pWidget);
	void handleMouseOut(const Poco::Net::HTMLForm& form, Widget* pWidget);
	void handleMouseOver(const Poco::Net::HTMLForm& form, Widget* pWidget);
	void handleMouseMove(const Poco::Net::HTMLForm& form, Widget* pWidget);
	void handleFocusEnter(const Poco::Net::HTMLForm& form, Widget* pWidget);
	void handleFocusLost(const Poco::Net::HTMLForm& form, Widget* pWidget);
	void handleKeyUp(const Poco::Net::HTMLForm& form, Widget* pWidget);
	void handleKeyDown(const Poco::Net::HTMLForm& form, Widget* pWidget);
	void handleKeyPressed(const Poco::Net::HTMLForm& form, Widget* pWidget);
	void handleSelect(const Poco::Net::HTMLForm& form, Widget* pWidget);
	void handleChange(const Poco::Net::HTMLForm& form, Widget* pWidget);

	MouseEventArgs createMouseClickArgs(const Poco::Net::HTMLForm& form, Widget* id) const;
	MouseMovementArgs createMouseMovementArgs(const Poco::Net::HTMLForm& form, Widget* id) const;
	KeyEventArgs createKeyEventArgs(const Poco::Net::HTMLForm& form, Widget* id) const;

	typedef void (JSEventHandler::*HandleMethod)(const Poco::Net::HTMLForm& form, Widget* pWidget);
	typedef std::map<std::string, HandleMethod> Handlers;

	static Handlers createHandlers();

private:
	typedef std::map<std::string, Widget*> IDToWidget;
	IDToWidget& _widgets;
};


} } // namespace Poco::WebWidgets


#endif // WebWidgets_JSEventHandler_INCLUDED
