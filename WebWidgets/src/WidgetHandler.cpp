//
// WidgetHandler.cpp
//
// $Id: //poco/Main/WebWidgets/src/WidgetHandler.cpp#4 $
//
// Library: WebWidgets
// Package: HTTPHandler
// Module:  WidgetHandler
//
// Copyright (c) 2007, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#include "Poco/WebWidgets/WidgetHandler.h"
#include "Poco/WebWidgets/HTMLVisitor.h"
#include "Poco/Delegate.h"


namespace Poco {
namespace WebWidgets {


WidgetHandler::WidgetHandler(Poco::AutoPtr<Widget> ptr):_ptr(ptr)
{
}


WidgetHandler::~WidgetHandler()
{
}


void WidgetHandler::handleRequest(Poco::Net::HTTPServerRequest& request, Poco::Net::HTTPServerResponse& response)
{
	HTMLVisitor visitor(response.send(), Poco::URI(request.getURI()));
	visitor.EWidget += delegate(this, &WidgetHandler::onWidget);
	visitor.EContainsForm += delegate(this, &WidgetHandler::onContainsForm);
	visitor.EHasInputField += delegate(this, &WidgetHandler::onHasInputField);
	visitor.EHasCheckBox += delegate(this, &WidgetHandler::onHasCheckBox);
	if (_ptr)
		_ptr->accept(visitor);
}


void WidgetHandler::onContainsForm(const void* pSender, std::pair<Poco::URI, Form*>& aPair)
{
	EContainsForm(pSender, aPair);
}


void WidgetHandler::onHasInputField(const void* pSender, std::pair<Form*, InputField*>& aPair)
{
	EHasInputField(pSender, aPair);
}


void WidgetHandler::onHasCheckBox(const void* pSender, std::pair<Form*, CheckBox*>& aPair)
{
	EHasCheckBox(pSender, aPair);
}


} } // namespace Poco::WebWidgets
