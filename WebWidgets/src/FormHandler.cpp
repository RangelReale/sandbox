//
// FormHandler.cpp
//
// $Id: //poco/Main/WebWidgets/src/FormHandler.cpp#3 $
//
// Library: WebWidgets
// Package: HTTPHandler
// Module:  FormHandler
//
// Copyright (c) 2007, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#include "Poco/WebWidgets/FormHandler.h"
#include "Poco/Net/HTMLForm.h"


namespace Poco {
namespace WebWidgets {


FormHandler::FormHandler(Poco::AutoPtr<Form> ptrForm, 
						 const std::map<std::string, Poco::AutoPtr<InputField> >& inputs, 
						 const std::multimap<std::string, Poco::AutoPtr<CheckBox> >& checkBoxes):
	_ptrForm(ptrForm),
	_inputFields(inputs),
	_checkBoxes(checkBoxes)
{
}


FormHandler::~FormHandler()
{
}


void FormHandler::handleRequest(Poco::Net::HTTPServerRequest& request, Poco::Net::HTTPServerResponse& response)
{
	Poco::Net::HTMLForm form(request);
	Poco::Net::NameValueCollection::ConstIterator it = form.begin();
	Poco::Net::NameValueCollection::ConstIterator itEnd = form.end();
	for (; it != itEnd; ++it)
	{
		std::map<std::string, Poco::AutoPtr<InputField> >::iterator itIn = _inputFields.find(it->first);
		if (itIn != _inputFields.end())
		{
			itIn->second->setText(it->second);
		}
		else
		{
			std::multimap<std::string, Poco::AutoPtr<CheckBox> >::iterator itC = _checkBoxes.lower_bound(it->first);
			std::multimap<std::string, Poco::AutoPtr<CheckBox> >::iterator itCEnd = _checkBoxes.upper_bound(it->first);
			
			for (; itC != _checkBoxes.end() && itC != itCEnd; ++itC)
			{
				if (itC->second->getText() == it->second)
				{
					itC->second->setChecked(true);
					_checkBoxes.erase(itC);
					break;
				}
			}
		}
	}

	std::multimap<std::string, Poco::AutoPtr<CheckBox> >::iterator itC = _checkBoxes.begin();
	std::multimap<std::string, Poco::AutoPtr<CheckBox> >::iterator itCEnd = _checkBoxes.end();
	for (; itC != itCEnd; ++itC)
		itC->second->setChecked(false);

	response.redirect(_ptrForm->getRedirect().toString());
}


} } // namespace Poco::WebWidgets
