//
// EnvironmentStream_WIN32.h
//
// $Id: //poco/Main/Script/include/Poco/EnvironmentStream_WIN32.h#5 $
//
// Library: Script
// Package: Streams
// Module:  EnvironmentStream
//
// Definition of the EnvironmentStreamBuf, EnvironmentInputStream and EnvironmentOutputStream classes.
//
// Copyright (c) 2007, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#ifndef Script_EnvironmentStreamBuf_INCLUDED
#define Script_EnvironmentStreamBuf_INCLUDED


#include "Poco/Script/Script.h"
#include "Poco/BufferedBidirectionalStreamBuf.h"


namespace Poco {
namespace Script {

class Script_API EnvironmentStreamBuf: public BufferedBidirectionalStreamBuf
	/// This stream buffer handles Environmentio
{
public:
	//EnvironmentStreamBuf();
		/// Creates a EnvironmentStreamBuf.

	EnvironmentStreamBuf(Environment& env);
		/// Creates a EnvironmentStreamBuf.

	~EnvironmentStreamBuf();
		/// Destroys the EnvironmentStream.

	void open(Environment& env, std::ios::openmode mode);
		/// Opens the given file in the given mode.

	void close();
		/// Closes the Environment stream buffer

protected:
	enum
	{
		BUFFER_SIZE = 4096
	};

	int readFromDevice(char* buffer, std::streamsize length);
	int writeToDevice(const char* buffer, std::streamsize length);

private:
	Environment* _pEnv;
};


} } // namespace Poco::Script


#endif // Script_EnvironmentStreamBuf_INCLUDED
