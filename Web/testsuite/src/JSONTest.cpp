//
// JSONTest.cpp
//
// $Id: //poco/Main/Util/testsuite/src/JSONTest.cpp#6 $
//
// Copyright (c) 2004-2006, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#include "JSONTest.h"
#include "CppUnit/TestCaller.h"
#include "CppUnit/TestSuite.h"
#include "Poco/Web/JSONParser.h"
#include "Poco/Web/JSONPrinter.h"
#include "Poco/Web/JSONPrettyPrinter.h"
#include "Poco/Web/JSONCondenser.h"
#include <sstream>


using Poco::Web::JSONParser;
using Poco::Web::JSONPrinter;
using Poco::Web::JSONPrettyPrinter;
using Poco::Web::JSONCondenser;


JSONTest::JSONTest(const std::string& name): CppUnit::TestCase(name)
{
}


JSONTest::~JSONTest()
{
}


void JSONTest::testPrinter()
{
	const std::string str("{"
		"\"firstName\": \"John\","
		"\"lastName\": \"Smith\","
		"\"address\": {"
			"\"streetAddress\": \"21 2nd Street\","
			"\"city\": \"New York\","
			"\"state\": \"NY\","
			"\"postalCode\": 10021"
		"},"
	"\"phoneNumbers\": ["
		"\"212 555-1234\","
		"\"646 555-4567\""
	"],"
	"\"weight\": {"
		"\"value\": 123.456, \"units\": \"lbs\""
		"}"
	"}");

	std::ostringstream os;
	JSONParser jp(new JSONPrinter(os));
	jp.parse(str);

	std::string s1 = os.str();

	std::ostringstream ros;
	ros << "{" << std::endl;
	ros << "key = 'firstName', value = string: 'John'" << std::endl;
	ros << "key = 'lastName', value = string: 'Smith'" << std::endl;
	ros << "key = 'address', value = {" << std::endl;
	ros << "key = 'streetAddress', value = string: '21 2nd Street'" << std::endl;
	ros << "key = 'city', value = string: 'New York'" << std::endl;
	ros << "key = 'state', value = string: 'NY'" << std::endl;
	ros << "key = 'postalCode', value = integer: 10021" << std::endl;
	ros << "\t}" << std::endl;
	ros << "key = 'phoneNumbers', value = [" << std::endl;
	ros << "\t\tstring: '212 555-1234'" << std::endl;
	ros << "\t\tstring: '646 555-4567'" << std::endl;
	ros << "\t]" << std::endl;
	ros << "key = 'weight', value = {" << std::endl;
	ros << "key = 'value', value = float: 123.456" << std::endl;
	ros << "key = 'units', value = string: 'lbs'" << std::endl;
	ros << "\t}" << std::endl;
	ros << "}" << std::endl;

	assert (ros.str() == os.str());
}


void JSONTest::setUp()
{
}


void JSONTest::tearDown()
{
}


CppUnit::Test* JSONTest::suite()
{
	CppUnit::TestSuite* pSuite = new CppUnit::TestSuite("JSONTest");

	CppUnit_addTest(pSuite, JSONTest, testPrinter);

	return pSuite;
}
