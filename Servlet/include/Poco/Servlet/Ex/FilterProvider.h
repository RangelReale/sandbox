//
// FilterProvider.h
//
//
// Library: ServletEx
// Package: Servlet
// Module:  FilterProvider
//
// Definition of the FilterProvider class.
//
// Copyright (c) 2006, Aleksandar Fabijanic and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#ifndef ServletEx_FilterProvider_INCLUDED
#define ServletEx_FilterProvider_INCLUDED


#include "Poco/Servlet/Filter.h"
#include "Poco/Servlet/Servlet.h"
#include <string>
#include "Poco/Servlet/ServletBase.h"


namespace Poco {
namespace Servlet {
namespace Ex {


class Servlet_API FilterProvider
{
public:
	virtual ~FilterProvider();
		/// Destroys FilterProvider.

	FilterProvider(const std::string& name);
		/// Creates FilterProvider.

	virtual const Filter& getFilter(const std::string& filterName) const = 0;
	virtual const FilterChain& getFilterChain(const Servlet& servlet) = 0;
	std::string name();

private:
	FilterProvider();
	std::string _name;
};

///
/// inlines
///


inline std::string FilterProvider::name()
{ 
	return _name; 
}


} } } // namespace Poco::Servlet::Ex


#endif //ServletEx_FilterProvider_INCLUDED
