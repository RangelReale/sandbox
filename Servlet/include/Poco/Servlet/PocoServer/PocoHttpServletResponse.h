//
// PocoHttpServletResponse.h
//
//
// Library: PocoServer
// Package: PocoServerCore
// Module:  PocoHttpServletResponse
//
// Definition of the PocoHttpServletResponse class.
//
// Copyright (c) 2006, Aleksandar Fabijanic and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#ifndef PocoServer_HttpServletResponse_INCLUDED
#define PocoServer_HttpServletResponse_INCLUDED


#include "PocoServer.h"
#include "Poco/Servlet/HttpServletResponse.h"
#include "Poco/Servlet/Cookie.h"
#include "Poco/Net/HTTPServerResponse.h"
#include "Poco/TextEncoding.h"
#include "Poco/Exception.h"


namespace Poco {
namespace Servlet {
namespace PocoServer {


class PocoServer_API PocoHttpServletResponse : public HttpServletResponse
{
public:
	PocoHttpServletResponse(Poco::Net::HTTPServerResponse& response, const std::string& enc="");
	~PocoHttpServletResponse();

	/// ServletResponse overrides
	void flushBuffer();
	int getBufferSize();
	const std::string getCharacterEncoding() const;
	std::string getContentType();
	std::locale getLocale();
	ServletOutputStream& getOutputStream() ;
	PrintWriter& getWriter();
	bool isCommitted();
	void reset();
	void resetBuffer();
	void setBufferSize(int size);
	void setCharacterEncoding(const std::string& charset);
	void setContentLength(int len);
	void setContentType(const std::string& type);
	void setLocale(const std::locale& loc);

	/// HttpServletResponse overrides
	void addCookie(const Cookie& cookie);
	bool containsHeader(const std::string& name);
	std::string encodeURL(const std::string& url);
	std::string encodeRedirectURL(const std::string& url);
	void sendError(int sc, const std::string& msg);
	void sendError(int sc);
	void sendRedirect(const std::string& location);
	void setDateHeader(const std::string& name, long date);
	void addDateHeader(const std::string& name, long date);
	void setHeader(const std::string& name, const std::string& value);
	void addHeader(const std::string& name, const std::string& value);
	void setIntHeader(const std::string& name, int value);
	void addIntHeader(const std::string& name, int value);
	void setStatus(int sc);
	void setStatus(int sc, const std::string& sm);

private:
	std::string formatDate(long date);

	Poco::Net::HTTPServerResponse& _response;
	Poco::TextEncoding*            _pEncoding;
	ServletOutputStream*           _pOutputStream;
	PrintWriter*                   _pPrintWriter;
	bool                           _committed;

	friend class ServletRequestHandler;
};


} } } // namespace Poco::Servlet::PocoServer


#endif // PocoServer_HttpServletResponse_INCLUDED
