//
// FilterChainImpl.h
//
//
// Library: Container
// Package: ContainerCore
// Module:  FilterChainImpl
//
// Definition of the FilterChainImpl class.
//
// Copyright (c) 2006, Aleksandar Fabijanic and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#ifndef Container_FilterChain_INCLUDED
#define Container_FilterChain_INCLUDED


#include "Poco/Servlet/Container/ContainerBase.h"
#include "Poco/Servlet/Servlet.h"
#include "Poco/Servlet/Filter.h"
#include "Poco/Servlet/ServletRequest.h"
#include "Poco/Servlet/ServletResponse.h"
#include "Poco/Mutex.h"


namespace Poco {
namespace Servlet {
namespace Container {


class Container_API FilterChainImpl: public FilterChain
{
public:
	FilterChainImpl(const Servlet* pResource);
	FilterChainImpl(const Filter* pFilter);

	void doFilter(ServletRequest& request, ServletResponse& response) const;
	 /// Invokes the next filter of this chain, or, if all filters have
	 /// already been invoked, the servlet at the end of the chain..

	const Filter* appendFilter(const Filter* pFilter);
	 /// Append a filter to this chain.

	const bool removeFilter(const Filter* pFilter);
	 /// Remove the filter from this chain.

	const Servlet* setServlet(const Servlet* pResource);
	 /// Assign the servlet at the end of this chain.

private:
	typedef std::vector<const Filter*> FilterVec;
	FilterChainImpl();
	FilterChainImpl(const FilterChainImpl&);
	FilterChainImpl& operator=(const FilterChainImpl&);

	const Servlet* _pServlet;
	FilterVec      _filters;
	mutable int    _currentFilter;
	mutable Mutex  _mutex;
};


} } } // namespace Poco::Servlet::Container


#endif //Container_FilterChain_INCLUDED
