//
// WebApplicationTask.cpp
//
// Library: Container
// Package: ContainerCore
// Module:  WebApplicationTask
//
// Copyright (c) 2006, Aleksandar Fabijanic and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#include "Poco/Servlet/Container/WebApplicationTask.h"
#include "Poco/Servlet/Ex/HttpServletDispatcher.h"
#include "Poco/Servlet/Ex/FilterDispatcher.h"
#include "Poco/Task.h"
#include "Poco/Path.h"
#include "Poco/Util/Application.h"


using Poco::Servlet::Ex::FilterDispatcher;
using Poco::Servlet::Ex::HttpServletDispatcher;


namespace Poco {
namespace Servlet {
namespace Container {


WebApplicationTask::WebApplicationTask(const std::string& base
	,HttpServletDispatcher& servletDispatcher
	,FilterDispatcher* pFilterDispatcher):
	Task(Path(base)[Path(base).depth()-1]), 
	_webApp(base, servletDispatcher, pFilterDispatcher) 
{
}


void WebApplicationTask::runTask()
{
	while(!isCancelled()) 
		sleep(50);
}


} } } // namespace Poco::Servlet::Container'
