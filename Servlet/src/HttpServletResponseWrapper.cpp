//
// HttpServletResponseWrapper.cpp
//
//
// Library: Servlet
// Package: Http
// Module:  HttpServletResponseWrapper
//
// Copyright (c) 2006, Aleksandar Fabijanic and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//
// The code in this file is derived from Apache Tomcat project
// Copyright (c) 2004 The Apache Software Foundation.
// http://www.apache.org/licenses/LICENSE-2.0
// 


#include "Poco/Servlet/HttpServletResponseWrapper.h"


namespace Poco {
namespace Servlet {


HttpServletResponseWrapper::HttpServletResponseWrapper(HttpServletResponse& response) :
	_response(response), 
	ServletResponseWrapper(response)
{
}


HttpServletResponseWrapper::~HttpServletResponseWrapper()
{
}


void HttpServletResponseWrapper::addCookie(const Cookie& cookie) 
{
	_response.addCookie(cookie);
}


bool HttpServletResponseWrapper::containsHeader(const std::string& name) 
{
	return _response.containsHeader(name);
}


std::string HttpServletResponseWrapper::encodeURL(const std::string& url) 
{
	return _response.encodeURL(url);
}


std::string HttpServletResponseWrapper::encodeRedirectURL(const std::string& url) 
{
	return _response.encodeRedirectURL(url);
}


std::string HttpServletResponseWrapper::encodeUrl(const std::string& url) 
{
	return _response.encodeUrl(url);
}


std::string HttpServletResponseWrapper::encodeRedirectUrl(const std::string& url) 
{
	return _response.encodeRedirectUrl(url);
}


void HttpServletResponseWrapper::sendError(int sc, const std::string& msg) 
{
	_response.sendError(sc, msg);
}


void HttpServletResponseWrapper::sendError(int sc) 
{
	_response.sendError(sc);
}


void HttpServletResponseWrapper::sendRedirect(const std::string& location) 
{
	_response.sendRedirect(location);
}


void HttpServletResponseWrapper::setDateHeader(const std::string& name, long date) 
{
	_response.setDateHeader(name, date);
}


void HttpServletResponseWrapper::addDateHeader(const std::string& name, long date) 
{
	_response.addDateHeader(name, date);
}


void HttpServletResponseWrapper::setHeader(const std::string& name, const std::string& value) 
{
	_response.setHeader(name, value);
}


void HttpServletResponseWrapper::addHeader(const std::string& name, const std::string& value) 
{
	_response.addHeader(name, value);
}


void HttpServletResponseWrapper::setIntHeader(const std::string& name, int value) 
{
	_response.setIntHeader(name, value);
}


void HttpServletResponseWrapper::addIntHeader(const std::string& name, int value) 
{
	_response.addIntHeader(name, value);
}


void HttpServletResponseWrapper::setStatus(int sc) 
{
	_response.setStatus(sc);
}


void HttpServletResponseWrapper::setStatus(int sc, const std::string& sm) 
{
	_response.setStatus(sc, sm);
}


} } // namespace Poco::Servlet
