//
// SSHSession.cpp
//
// $Id: //poco/Main/SSH/src/SSHSession.cpp#1 $
//
// Library: SSH
// Package: SSHCore
// Module:  SSHSession
//
// Copyright (c) 2007, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#include "Poco/SSH/SSHSession.h"
#include "Poco/SSH/SSHSessionImpl.h"


namespace Poco {
namespace SSH {


SSHSession::SSHSession(SSHHostValidator& validator, const std::string& server, const std::string& user, const std::string& pwd):
	_pImpl(new SSHSessionImpl(validator, Poco::Net::SocketAddress(server, DEFAULT_PORT), user, pwd))
{
}


SSHSession::SSHSession(SSHHostValidator& validator, const std::string& server, Poco::UInt16 port, const std::string& user, const std::string& pwd):
	_pImpl(new SSHSessionImpl(validator, Poco::Net::SocketAddress(server, port), user, pwd))
{
}


SSHSession::SSHSession(SSHHostValidator& validator, const Poco::Net::SocketAddress& addr, const std::string& user, const std::string& pwd):
	_pImpl(new SSHSessionImpl(validator, addr, user, pwd))
{
}


SSHSession::SSHSession(SSHHostValidator& validator, const Poco::Net::StreamSocket& sock, const std::string& user, const std::string& pwd):
	_pImpl(new SSHSessionImpl(validator, sock, user, pwd))
{
}


SSHSession::~SSHSession()
{
	delete _pImpl;
}


} } // namespace Poco::SSH
