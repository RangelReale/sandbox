//
// NetConfig.h
//
// $Id: //poco/Main/Data/include/Poco/IO/NetConfig.h#1 $
//
// Library: IO
// Package: Net
// Module:  NetConfig
//
// Definition of the NetConfig class.
//
// Copyright (c) 2006, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#ifndef IO_NetConfig_INCLUDED
#define IO_NetConfig_INCLUDED


#include "Poco/IO/IO.h"
#include "Poco/Net/SocketAddress.h"
#include "Poco/Timespan.h"
#include "Poco/Exception.h"


namespace Poco {
namespace IO {


class IO_API NetConfig
{
public:
	enum ChannelType
	{
		STREAM,
		DATAGRAM
	};

	NetConfig(const std::string& address, 
		long msecTimeout=5000, 
		ChannelType type=STREAM);

	~NetConfig();

	const ChannelType type() const;

	const Poco::Timespan& timeout() const;

	const Poco::Net::SocketAddress& address() const;

private:
	NetConfig();

	ChannelType              _type;
	Poco::Timespan           _timeout;
	Poco::Net::SocketAddress _address;
};


//
// inlines
//


inline const NetConfig::ChannelType NetConfig::type() const
{
	return _type;
}


inline const Poco::Timespan& NetConfig::timeout() const
{
	return _timeout;
}


inline const Poco::Net::SocketAddress& NetConfig::address() const
{
	return _address;
}


} } // namespace Poco::IO


#endif // IO_NetConfig_INCLUDED
